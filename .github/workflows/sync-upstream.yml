name: Sync Upstream

on:
  schedule:
    - cron: '0 8 * * *' # Once a day at 08:00
  workflow_dispatch: # Can also be triggered manually

jobs:

  sync_main_branch:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream (main branch)

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        # ref: skr-mini-e3-v3-0
        ref: 2.0.x
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: false

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      # uses: aormsby/Fork-Sync-With-Upstream-action@master
      # uses: aormsby/Fork-Sync-With-Upstream-action@v3.2
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.0
      with:
        # Target branch in this repository
        target_sync_branch: 2.0.x
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Upstream branch in another repository
        upstream_sync_branch: 2.0.x
        upstream_sync_repo: MarlinFirmware/Marlin
        # upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

        # Rebase instead of merge
        git_config_pull_rebase: true

        # Set test_mode true to run tests instead of the true action!!
        test_mode: false
      
    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: Build Trigger
      if: steps.sync.outputs.has_new_commits == 'true'
      run: |
        echo "New commits were found and synced, triggering a new firmware build"
        - name: Directory update request
        [ -z "${{ secrets.GITHUB_TOKEN }}" ] && echo "Skipping, no GITHUB_TOKEN" && exit 0
        curl --request POST \
          --url https://api.github.com/repos/Didstopia/Marlin/actions/workflows/build-btt-ender3v2.yaml/dispatches \
          --header 'Content-Type: application/json' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --data '{
              "ref": "skr-mini-e3-v3-0",
              "inputs": {
                "targetBranch": "2.0.x"
              }
            }'
    
    # - name: No new commits
    #   if: steps.sync.outputs.has_new_commits == 'false'
    #   run: echo "There were no new commits."
      
    # - name: Show value of 'has_new_commits'
    #   run: echo ${{ steps.sync.outputs.has_new_commits }}

  sync_bugfix_branch:
    runs-on: ubuntu-latest
    name: Sync latest commits from upstream (bugfix branch)

    steps:
    # REQUIRED step
    # Step 1: run a standard checkout action, provided by github
    - name: Checkout target repo
      uses: actions/checkout@v2
      with:
        # optional: set the branch to checkout,
        # sync action checks out your 'target_sync_branch' anyway
        # ref: skr-mini-e3-v3-0
        ref: bugfix-2.0.x
        # REQUIRED if your upstream repo is private (see wiki)
        persist-credentials: false

    # REQUIRED step
    # Step 2: run the sync action
    - name: Sync upstream changes
      id: sync
      # uses: aormsby/Fork-Sync-With-Upstream-action@master
      # uses: aormsby/Fork-Sync-With-Upstream-action@v3.2
      uses: aormsby/Fork-Sync-With-Upstream-action@v3.0
      with:
        # Target branch in this repository
        target_sync_branch: bugfix-2.0.x
        # REQUIRED 'target_repo_token' exactly like this!
        target_repo_token: ${{ secrets.GITHUB_TOKEN }}
        # Upstream branch in another repository
        upstream_sync_branch: bugfix-2.0.x
        upstream_sync_repo: MarlinFirmware/Marlin
        # upstream_repo_access_token: ${{ secrets.UPSTREAM_REPO_SECRET }}

        # Rebase instead of merge
        git_config_pull_rebase: true

        # Set test_mode true to run tests instead of the true action!!
        test_mode: false
      
    # Step 3: Display a sample message based on the sync output var 'has_new_commits'
    - name: Build Trigger
      if: steps.sync.outputs.has_new_commits == 'true'
      run: |
        echo "New commits were found and synced, triggering a new firmware build"
        - name: Directory update request
        [ -z "${{ secrets.GITHUB_TOKEN }}" ] && echo "Skipping, no GITHUB_TOKEN" && exit 0
        curl --request POST \
          --url https://api.github.com/repos/Didstopia/Marlin/actions/workflows/build-btt-ender3v2.yaml/dispatches \
          --header 'Content-Type: application/json' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --data '{
              "ref": "skr-mini-e3-v3-0",
              "inputs": {
                "targetBranch": "bugfix-2.0.x"
              }
            }'
    
    # - name: No new commits
    #   if: steps.sync.outputs.has_new_commits == 'false'
    #   run: echo "There were no new commits."
      
    # - name: Show value of 'has_new_commits'
    #   run: echo ${{ steps.sync.outputs.has_new_commits }}
