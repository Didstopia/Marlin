name: Build BTT TFT35 E3 V3.0

## FIXME: Fix proper build support for various branches AND tags/releases!
on:
  # Trigger custom firmwares builds only in specific situations
  push:
    # When the following branches are pushed
    branches:
      - 2.0.x
      - bugfix-2.0.x
      - skr-mini-e3-v3-0

    # When the following tags are pushed
    tags:
      - 2*

  # Allow manual builds
  workflow_dispatch:
    inputs:
      targetBranch:
        description: "Target Branch"
        required: true
        default: "bugfix-2.0.x"

jobs:

  build-display-firmware:
    ## TODO: Ensure that this works as expected
    if: ${{ github.base_ref == 'bugfix-2.0.x' || github.event.inputs.targetBranch == 'bugfix-2.0.x' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        model: [ "BIGTREE_TFT35_E3_V3_0" ]

    steps:
      - name: Checkout BTT Display Firmware Repository
        uses: actions/checkout@v3
        with:
          repository: bigtreetech/BIGTREETECH-TouchScreenFirmware
          ref: master
          fetch-depth: 1
          submodules: true

      - name: Cache pip
        if: success()
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Cache PlatformIO
        if: success()
        uses: actions/cache@v3
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}

      - name: Setup Python
        if: success()
        uses: actions/setup-python@v3

      - name: Install PlatformIO
        if: success()
        run: |-

          # Enable script debugging
          set -x

          python -m pip install --upgrade pip
          pip install --upgrade platformio
          pio upgrade --dev
          pio pkg update --global

      - name: Compile BTT Display Firmware
        id: compile_btt_display_firmware
        run: |-

          # Enable script debugging
          # set -x

          # Enable glob/wildcard support
          shopt -s extglob

          # Figure out the short display model name
          BTT_DISPLAY_MODEL_SHORT=$(echo -n $BTT_DISPLAY_MODEL | sed -E "s/([^_]*?)\_([^_]*)\_(.*)/\2/")

          ## FIXME: Validate that we have both the display model and the short display model!

          # Compile the firmware
          platformio run --environment ${BTT_DISPLAY_MODEL}

          # Remove old binaries and configs
          find "Copy to SD Card root directory to update/" -name '*.bin' -print -delete
          # find "Copy to SD Card root directory to update/" -name '*.ini' -print -delete
          find "Copy to SD Card root directory to update/" -name 'config*.ini' -print -delete

          # Copy new freshly built binaries and configs
          BTT_DIST_DIR="/tmp/btt-display-firmware"
          mkdir -p "${BTT_DIST_DIR}"
          echo "::set-output name=dist::${BTT_DIST_DIR}"
          find .pio/build/ -name '*.bin' -exec cp -vf '{}' "${BTT_DIST_DIR}/" ";"
          find TFT/src/User/ -name 'config.ini' -exec cp -vf '{}' "${BTT_DIST_DIR}/" ";"

          ## FIXME: THIS seems to be the main issue, where the "Copy..." directory is copied
          ##        to BTT_DIST_DIR, and NOT its contents, which is what we're after!
          # Copy extra files, such as themes and language packs
          # cp -fr "Copy to SD Card root directory to update"/ $BTT_DIST_DIR/
          cp -R Copy\ to\ SD\ Card\ root\ directory\ to\ update/THEME_* $BTT_DIST_DIR/

          ## FIXME: This works fine locally, but ALWAYS fails on CI (never deletes anything)
          ## UPDATE: Looks like it's still the copy command above that's the culprit!
          # Remove files unrelated to the current display model
          rm -fr $BTT_DIST_DIR/THEME_*/!($BTT_DISPLAY_MODEL_SHORT)/

          # Customize the firmware, config and/or theme(s)
          displayConfig() {
            local option=$1
            local value=$2
            local config=$3
            sed -E -i "s/([^ \n]*?)(${option})(\:)([^ ].*|$)/\2\:${value}/g w /tmp/btt_display_config_patch.log" "$config"
            if [ ! -s /tmp/btt_display_config_patch.log ]; then
              echo "::error title=ERROR::Failed to enable ${option} in ${config}"
              exit 1
            fi
          }
          displayConfig serial_port "P1:7 P2:0 P3:0 P4:0" ${BTT_DIST_DIR}/config.ini
          displayConfig emulated_m600 "0" ${BTT_DIST_DIR}/config.ini
          displayConfig ack_notification "2" ${BTT_DIST_DIR}/config.ini
          displayConfig files_list_mode "0" ${BTT_DIST_DIR}/config.ini
          displayConfig persistent_info "1" ${BTT_DIST_DIR}/config.ini
          displayConfig notification_m117 "1" ${BTT_DIST_DIR}/config.ini
          displayConfig prog_disp_type "1" ${BTT_DIST_DIR}/config.ini
          displayConfig layer_disp_type "1" ${BTT_DIST_DIR}/config.ini
          displayConfig serial_always_on "1" ${BTT_DIST_DIR}/config.ini
          displayConfig marlin_font_color "2" ${BTT_DIST_DIR}/config.ini
          displayConfig marlin_title "RASPUTIN" ${BTT_DIST_DIR}/config.ini
          displayConfig fan_count "3" ${BTT_DIST_DIR}/config.ini
          displayConfig controller_fan "1" ${BTT_DIST_DIR}/config.ini
          displayConfig toast_sound "0" ${BTT_DIST_DIR}/config.ini
          displayConfig lcd_idle_brightness "1" ${BTT_DIST_DIR}/config.ini
          displayConfig lcd_lock_on_idle "1" ${BTT_DIST_DIR}/config.ini
          displayConfig knob_led_color "2" ${BTT_DIST_DIR}/config.ini
          displayConfig custom_label_8 "MPC Autotune" ${BTT_DIST_DIR}/config.ini
          displayConfig custom_gcode_8 "M306 T \\\n" ${BTT_DIST_DIR}/config.ini

          # Create and export a filename for the build artifact
          VERSION=$(git rev-parse --abbrev-ref HEAD)-$(git rev-parse --short HEAD)-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}
          BTT_DIST_NAME="${BTT_DISPLAY_MODEL}-${VERSION}"
          echo "::set-output name=name::${BTT_DIST_NAME}"

        env:
          BTT_DISPLAY_MODEL: ${{ matrix.model }}

      # https://github.com/actions/upload-artifact/issues/39
      # - name: Compress Build Files
      #   run: zip -r /tmp/${{ matrix.model }}.zip ${{ steps.compile_btt_display_firmware.outputs.dist }}/*

      - name: Upload BTT Display Firmware
        if: success() # Ensure we only run this step if the previous one succeeded
        uses: actions/upload-artifact@v3
        with:
          # name: ${{ matrix.model }}
          name: ${{ steps.compile_btt_display_firmware.outputs.name }}
          # path: /tmp/${{ matrix.model }}.zip
          path: ${{ steps.compile_btt_display_firmware.outputs.dist }}/
          retention-days: 7
